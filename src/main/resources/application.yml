#生产环境运维支持，访问actuator/health展示
info:
  app_name: Spring Boot Framework Application
  app_version: 1.0.0

spring:
  datasource:
    name: mysql_stt
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      #基本属性
      url: jdbc:mysql://47.93.237.126:3306/stt?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
      username: stt
      password: 123
      #配置初始化大小/最小/最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
  # 配置i18n资源文件，供thymeleaf读取
  messages:
    basename: i18n/messages
    encoding: UTF-8
  mvc:
    #设定静态文件路径，js,css等
    static-path-pattern: /static/**
  freemarker:
    #关闭freemarker缓存, 即时刷新，上线生产环境需要改为true
    cache: false
    #设定ftl文件路径
    template-loader-path: classpath:/templates
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: true
    expose-session-attributes: true
    #在模板文件中可以这样使用var url='${request.contextPath}/public/save';
    request-context-attribute: request
    suffix: .ftl
  thymeleaf:
    #关闭thymeleaf缓存, 即时刷新，上线生产环境需要改为true
    cache: false
    #thymeleaf和freemarker配置区别，结尾要加/
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
  devtools:
    restart:
      #热部署生效(生产环境关闭)
      enabled: true
      #设置重启的目录,添加那个目录的文件需要restart
      additional-paths: src/main/java
      #排除那个目录的文件不需要restart
      #exclude: static/**,public/**
      #classpath目录下的WEB-INF文件夹内容修改不重启
      #exclude: WEB-INF/**
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 47.93.237.126
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 1000
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 10
      # 连接池中的最小空闲连接
      min-idle: 2
    # 连接超时时间（毫秒）
    timeout: 5000

## mybatis设置
mybatis:
  mapper-locations: classpath:mapper/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
  type-aliases-package: com.stt.springbootframework.entity  # 注意：对应实体类的路径

#pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  returnPageInfo: check

#为mybatis设置，生产环境可删除
restart:
  include:
    mapper: /mapper-[\\w-\\.]+jar
    pagehelper: /pagehelper-[\\w-\\.]+jar

#打印mybatis的DEBUG日志
logging:
  level:
    com.stt.springbootframework.dao:
      debug


############################################################
#
# Server 服务端相关配置
#
############################################################
# 配置api端口号
#server.port=8088
# 配置context-path, 一般来说这个配置在正式发布的时候不配置
#server.context-path=/IMooc
# 错误页，指定发生错误时，跳转的URL --> BasicErrorController
#server.error.path=/error
# session最大超时时间(分钟)，默认为30分钟
server:
  session-timeout: 60
# 该服务绑定IP地址，启动服务器时如本机不是该IP地址则抛出异常启动失败,
# 只有特殊需求的情况下才配置, 具体根据各自的业务来设置
#server.address=192.168.1.2

############################################################
# Server - tomcat 相关常用配置
############################################################
# tomcat最大线程数, 默认为200
#server.tomcat.max-threads=250
# tomcat的URI编码
server.tomcat:
  uri-encoding: UTF-8
# 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹
#（如：C:\Users\Shanhy\AppData\Local\Temp）
#server.tomcat.basedir=H:/springboot-tomcat-tmp
# 打开Tomcat的Access日志，并可以设置日志格式的方法：
#server.tomcat.access-log-enabled=true
#server.tomcat.access-log-pattern=
# accesslog目录，默认在basedir/logs
#server.tomcat.accesslog.directory=
# 日志文件目录
#logging.path=H:/springboot-tomcat-tmp
# 日志文件名称，默认为spring.log
#logging.file=myapp.log